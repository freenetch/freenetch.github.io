<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freenetch.github.io/news/article-65095.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</title>
        <meta name="description" content="除了从文件加载数据，另一个数据源是互联网，互联网每天产生各种不同的数据，可以用各种各样的方式从互联网加载数据。 一、了解&nbsp;Web API Web 应用编程接口（API）自动请求网站的特定信息" />
        <link rel="icon" href="/assets/website/img/freenetch/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Netch机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freenetch.github.io/news/article-65095.htm" />
    <meta property="og:site_name" content="Free Netch机场节点分享官网" />
    <meta property="og:title" content="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具" />
    <meta property="og:image" content="https://freenetch.github.io/uploads/20240908-3/29a3bb93379ed00202835097cb172852.webp" />
        <meta property="og:release_date" content="2025-03-01T06:59:13" />
    <meta property="og:updated_time" content="2025-03-01T06:59:13" />
        <meta property="og:description" content="除了从文件加载数据，另一个数据源是互联网，互联网每天产生各种不同的数据，可以用各种各样的方式从互联网加载数据。 一、了解&nbsp;Web API Web 应用编程接口（API）自动请求网站的特定信息" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS
    ============================================ -->
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/freenetch/bootstrap.min.css">
    <!-- Icon Font CSS -->
    <link rel="stylesheet" href="/assets/website/css/freenetch/icon-font.min.css">
    <!-- Plugins CSS -->
    <link rel="stylesheet" href="/assets/website/css/freenetch/plugins.css">
    <!-- Main Style CSS -->
    <link rel="stylesheet" href="/assets/website/css/freenetch/style.css">
    <!-- Modernizer JS -->
    <script src="/assets/website/js/frontend/freenetch/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-MJN687PNRB"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-MJN687PNRB');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Header Section Start -->
    <div class="header-section section">
        <!-- Header Bottom Start -->
        <div class="header-bottom header-bottom-one header-sticky">
            <div class="container">
                <div class="row align-items-center justify-content-between">
                    <div class="col mt-15 mb-15">
                        <!-- Logo Start -->
                        <div class="header-logo">
                            <a href="/">
                                                        <span>Free Netch</span>
                                                        </a>
                        </div><!-- Logo End -->
                    </div>
                    <div class="col order-12 order-lg-2 order-xl-2 d-none d-lg-block">
                        <!-- Main Menu Start -->
                        <div class="main-menu">
                            <nav>
                                <ul>
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </nav>
                        </div><!-- Main Menu End -->
                    </div>
                    <!-- Mobile Menu -->
                    <div class="mobile-menu order-12 d-block d-lg-none col"></div>
                </div>
            </div>
        </div><!-- Header Bottom End -->
    </div><!-- Header Section End -->
    <!-- Page Banner Section Start -->
    <div class="page-banner-section section">
        <div class="page-banner-wrap row row-0 d-flex align-items-center ">
            <!-- Page Banner -->
            <div class="col-12 d-flex align-items-center justify-content-center">
                <div class="page-banner">
                    <h1>python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具</h1>
                    <div class="breadcrumb">
                        <ul>
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div><!-- Page Banner Section End -->
    <div class="feature-section section mt-60 mb-60">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>除了从文件加载数据，另一个数据源是互联网，互联网每天产生各种不同的数据，可以用各种各样的方式从互联网加载数据。</p> <p>一、了解&nbsp;Web API</p> <p>Web 应用编程接口（API）自动请求网站的特定信息，再对这些信息进行可视化。每次运行，都会获取最新的数据来生成可视化，因此即便网络上的数据瞬息万变，它呈现的信息也都是最新的。</p> <p>Web API是网站的一部分，用于与使用非常具体的URL请求特定信息的程序交互。这种请求称为API调用。请求的数据将以易于处理的格式（如JSON或CSV）返回。</p> <p>&nbsp;GitHub（https://github.com/）上的项目都存储在仓库中，后者包含与项目相关联的一切：代码、项目参与者的信息、问题或bug报告等，编写一个自动下载GitHub上的Python项目的相关信息。</p> <p>&nbsp;在浏览器中打开：<span style="color: rgba(255, 0, 0, 1)"> https://api.github.com/search/repositories?q=language:python&amp;sort=stars</span>，可以看到如下内容，</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/44671dfb2c04f38f7ab5929f82f89216.jpg" alt="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具"></p> <p>此调用返回GitHub当前托管了total_count&nbsp; &nbsp;8884066个Python项目，还有最受欢迎的Python仓库的信息。</p> <p>其中第一部分（ https://api.github.com/ ）将请求发送到GitHub网站中响应API调用的部分；</p> <p>第二部分（ search/repositories ）让API搜索GitHub上的所有仓库。</p> <p>repositories 后面的问号指出我们要传递一个实参。 q 表示查询，而等号让我们能够开始指定<br />查询（ q= ）。通过使用 language:python ，我们指出只想获取主要语言为Python的仓库的信息。</p> <p>最后一部分（ &amp;sort=stars ）指定将项目按其获得的星级进行排序。</p> <p>但我们不能每次通过打开网页的形式来获取数据。但可以通过python中相关库</p> <p>二、安装&nbsp;requests</p> <p>requests是一个很实用的Python HTTP客户端库，专门用于发送HTTP请求，方便编程，编写爬虫和测试服务器响应数据时经常会用到，</p> <p>Requests主要相关参数有：</p> <p><span style="color: rgba(255, 0, 0, 1)">r.status_code 响应状态码</span><br /><span style="color: rgba(255, 0, 0, 1)">r.heards 响应头</span><br /><span style="color: rgba(255, 0, 0, 1)">r.cookies 响应cookies</span></p> <p><span style="color: rgba(255, 0, 0, 1)"> r.text 响应文本</span><br /><span style="color: rgba(255, 0, 0, 1)">r. encoding 当前编码</span><br /><span style="color: rgba(255, 0, 0, 1)">r. content 以字节形式（二进制）返回</span></p> <p>鉴于一直都使用的是anaconda3,可直接打开 anaconda prompt，然后输入命令：<span style="color: rgba(255, 0, 0, 1)">pip install --user requests 安装即可。</span></p> <p>下面来编写一个程序，执行API调用并处理结果，找出GitHub上星级最高的Python项目，代码如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span> requests<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 导入模块requests</span><span style="color: rgba(0, 0, 0, 1)"> url</span>=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">https://api.github.com/search/repositories?q=language:python&amp;sort=stars</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">存储API调用的URL</span> r = requests.get(url)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 调用get()并将URL传递给它，响应对象存储在变量 r中</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Status code:</span><span style="color: rgba(128, 0, 0, 1)">"</span>,r.status_code)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">包含一个名为status_code的属性</span> response_dict = r.json()<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 使用方法json()将这些信息转换为一个Python字典</span><span style="color: rgba(0, 0, 255, 1)">print</span>(response_dict.keys())<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">打印出字典的key</span></pre> </div> <p>上述代码有两行打印，运行结果如下：</p> <div class="cnblogs_Highlighter"> <pre class="brush:csharp;gutter:true;">Status code: 200 dict_keys(['total_count', 'incomplete_results', 'items'])</pre> </div> <p>状态码为200，请求成功。响应字典包含三个键： 'total_count'和 'incomplete_results'和&nbsp;'items'</p> <p>将API调用返回的信息存储到字典中，就可以利用前面了解的字典的键-值对来研究自己喜欢的信息了。</p> <p>三、整理字典中的信息</p> <p>上述代码response_dict = r.json()实际上已将请求信息转为字典，那查看一下字典里有些什么内容。</p> <p>从浏览器中打开的内容可以看到，返回的内容中是字典中包含字典</p> <p>（items是作为最上那个大括号中的key，对应的值，是由多个字典组成的字典列表，‘id’，‘node_id’，‘name’等也是items列表中第一子字典的key，见红色方框部分，列表字典等相互嵌套，好好分析一下）。</p> <p>1）先看一下与 'total_count'关联的值</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Total repositories:</span><span style="color: rgba(128, 0, 0, 1)">"</span>, response_dict[<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">total_count</span><span style="color: rgba(128, 0, 0, 1)">'</span>])</pre> </div> <p>2）items本身是一个字典，‘id’，‘node_id’，‘name’等均是key，后面对应的都是值，可以查一下有多少个key</p> <div class="cnblogs_code"> <pre>repo_dicts = response_dict[<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">items</span><span style="color: rgba(128, 0, 0, 1)">'</span>]<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">建一个变量字典repo_dicts，将items字典列表存储在 repo_dicts</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Repositories returned:</span><span style="color: rgba(128, 0, 0, 1)">"</span>, len(repo_dicts))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 打 repo_dicts的长度，获得item字典的长度信息</span></pre> </div> <p>3）查看第一个item的详细信息，并打印出所有key</p> <div class="cnblogs_code"> <pre>repo_dict = repo_dicts[0]<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">提取了repo_dicts中的第一个字典</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">\nKeys:</span><span style="color: rgba(128, 0, 0, 1)">"</span>, len(repo_dict))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">打印这个字典包含的键数</span><span style="color: rgba(0, 0, 255, 1)">print</span>(<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">\n</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)</span><span style="color: rgba(0, 0, 255, 1)">for</span> key<span style="color: rgba(0, 0, 255, 1)">in</span> repo_dict.keys():<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">打印这个字典的所有键</span><span style="color: rgba(0, 0, 255, 1)">print</span>(key)</pre> </div> <p>整体运行结果（下图白色部分为浏览器打开）：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ab21b6371eb38ce0a11604f60cd742ef.jpg" alt="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具"></p> <p><span style="color: rgba(255, 0, 0, 1)">思考一下，为什么图中的Total repositories一个是9037884，另一个为9145790，两者不一致？</span></p> <p>有了key，就很容易查询到相关的值了（当然这里都是字符串，如果是数字型的就能可视化）</p> <p>&nbsp;四，数字可视化</p> <p>通过浏览器打开页面，会发现"forks": 32471,&nbsp; &nbsp; &nbsp; &nbsp;"open_issues": 305,&nbsp; &nbsp; &nbsp; &nbsp;"watchers": 177777等有相关数据，于是，可以通过对应的key，将相关数据整合成一个数据列表，然后显示出来，比如可视化wathers</p> <div class="cnblogs_code"> <pre>count=<span style="color: rgba(0, 0, 0, 1)">0   watchers, counts</span>=<span style="color: rgba(0, 0, 0, 1)"> [], []</span><span style="color: rgba(0, 0, 255, 1)">for</span> repo_dict<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> repo_dicts:     watchers.append(repo_dict[</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">watchers</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">])     count</span>+= 1<span style="color: rgba(0, 0, 0, 1)">     counts.append(count)  plt.bar(counts,watchers, label</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">watchers</span><span style="color: rgba(128, 0, 0, 1)">"</span>, color=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">#ff2204</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">) plt.legend() plt.show()</span></pre> </div> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c2a9a969cc12f5e6dbcf9ef0443aaa99.jpg" alt="python数据可视化-matplotlib入门(7)-从网络加载数据及数据可视化的小总结_在线工具"></p> <p>五、数据可视化的小总结：</p> <p>&nbsp;matplotlib中数据可视化的方法主要就是调用pyplot接口，再直接调用对象的建立方法，在方法中对该对象进行相应的属性设置，所以掌握这种方法的核心就在于掌握每种对象的建立方法和具体参数设置。Python数据可视化的难处在于掌握参数的设置，内置的参数虽然很多，但一般都用不上（可以留着慢慢钻研），将用得上的参数和参数值几何整理下来，做到这样，对于Python的可视化学习暂时足矣。剩下的时间该去学习其他更为有用的！</p> <p>简而化之，</p> <p>曲线图&nbsp; &nbsp;plt.plot(squares, linewidth=5)<span style="color: rgba(255, 0, 0, 1)"> 只需要提供一组数据即可</span><br />散点图&nbsp; &nbsp;plt.scatter(x, y,c='r',edgecolor='none',s=100) ，<span style="color: rgba(255, 0, 0, 1)">x,y分别为x轴，y轴坐标位置，x,y对应</span><br />柱图&nbsp; &nbsp; &nbsp; plt.bar(x,y, label="Test one", color='r')<span style="color: rgba(255, 0, 0, 1)">x为x轴位置，y为值，x如为数列,则y对应相同长度</span><br />柱图&nbsp; &nbsp; &nbsp; plt.hist(list, bins, histtype='bar', rwidth=0.8,color='r')<span style="color: rgba(255, 0, 0, 1)">bins为柱图划分范围，表现在x轴上，list为数列，显示在y 轴</span><br />饼图&nbsp; &nbsp; &nbsp; plt.pie(slices)   slices<span style="color: rgba(255, 0, 0, 1)"> 为一数列</span><br />堆叠图&nbsp; plt.stackplot(days, times,labels=labellist,colors=colorlist)<span style="color: rgba(255, 0, 0, 1)">&nbsp;days为一维数列，times为一维或多维数列，每一维数列元素个数与days一样。</span></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-65094.htm">vue中的axios简单封装</a></p>
                                        <p>下一个：<a href="/news/article-65732.htm">河南兽药厂100强排名前十（河南兽药厂100强排名前十有哪些）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-3-linux-netch-node.htm" title="12月3日→19M/S|2024年最新免费节点Free Netch订阅链接地址">12月3日→19M/S|2024年最新免费节点Free Netch订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-49880.htm" title="有没有卖狗的平台（有没有买卖狗的软件）">有没有卖狗的平台（有没有买卖狗的软件）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-20-free-high-speed-nodes.htm" title="1月20日→21.4M/S|2025年最新免费节点Free Netch订阅链接地址">1月20日→21.4M/S|2025年最新免费节点Free Netch订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-41934.htm" title="动物医院实践个人总结报告（动物医院实践个人总结报告范文）">动物医院实践个人总结报告（动物医院实践个人总结报告范文）</a></li>
                        <li class="py-2"><a href="/news/article-37980.htm" title="动物医院英文缩写怎么写的 动物医院英文缩写怎么写的呀">动物医院英文缩写怎么写的 动物医院英文缩写怎么写的呀</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-25-share-netch-node.htm" title="1月25日→22.7M/S|2025年最新免费节点Free Netch订阅链接地址">1月25日→22.7M/S|2025年最新免费节点Free Netch订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-36995.htm" title="宠物猫大概多少钱一只幼崽（宠物猫大概多少钱一只幼崽图片）">宠物猫大概多少钱一只幼崽（宠物猫大概多少钱一只幼崽图片）</a></li>
                        <li class="py-2"><a href="/news/article-48848.htm" title="webpack 执行npm run 时，因为版本依赖报的那些错">webpack 执行npm run 时，因为版本依赖报的那些错</a></li>
                        <li class="py-2"><a href="/news/article-60304.htm" title="猫三联每一针间隔时间多久（猫三联一针多少）">猫三联每一针间隔时间多久（猫三联一针多少）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-30-free-node-subscribe-links.htm" title="1月30日→20.4M/S|2025年最新免费节点Free Netch订阅链接地址">1月30日→20.4M/S|2025年最新免费节点Free Netch订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div><!-- Feature Section End -->
        <!-- Footer Section Start -->
    <div class="footer-section section bg-ivory">
        <!-- Footer Bottom Section Start -->
        <div class="footer-bottom-section section">
            <div class="container">
                <div class="row">
                    <!-- Footer Copyright -->
                    <div class="col-lg-6 col-12">
                        <div class="footer-copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>
                                <a href="/">Free Netch机场节点分享官网</a> 版权所有
                                <br />
                                Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- Footer Bottom Section Start -->
    </div><!-- Footer Section End -->
    <!-- Popup Subscribe Section Start -->
    
    <!-- JS
============================================ -->
    <!-- jQuery JS -->
    <script src="/assets/website/js/frontend/freenetch/vendor/jquery-1.12.4.min.js"></script>
    <!-- Popper JS -->
    <script src="/assets/website/js/frontend/freenetch/popper.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/website/js/frontend/freenetch/bootstrap.min.js"></script>
    <!-- Plugins JS -->
    <script src="/assets/website/js/frontend/freenetch/plugins.js"></script>
    <!-- Ajax Mail -->
    <script src="/assets/website/js/frontend/freenetch/ajax-mail.js"></script>
    <!-- Main JS -->
    <script src="/assets/website/js/frontend/freenetch/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>